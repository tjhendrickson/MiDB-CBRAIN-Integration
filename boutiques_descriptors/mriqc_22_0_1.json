{
    "name": "MRIQC",
    "description": "MRIQC extracts no-reference IQMs (image quality metrics) from structural (T1w and T2w) and functional MRI (magnetic resonance imaging) data.",
    "tool-version": "22.0.1",
    "schema-version": "0.5",
    "url": "https://mriqc.readthedocs.io/en/stable/",
    "command-line": "true [DERIVATIVES_PREFIX]; mriqc [SUBJECT_DIR] [MRIQC_OUTPUT_DIR] participant --no-sub --n_cpus 1 -w work/[SUBJECT_DIR].mriqc_work [SESSION_ID] [RUN_ID] [TASK_ID] [MODALITIES] [DRY_RUN] [MEM_GB] [FLOAT32] [ICA] [FD_THRESH]",
    "container-image": {
        "image": "nipreps/mriqc:22.0.1",
        "index": "docker://",
        "type": "singularity"
    },
    "inputs": [
        {
            "description": "Subject folder for BIDS (folders name should be sub-XXXXX).",
            "id": "subject_dir",
            "name": "Subject Directory",
            "optional": false,
            "type": "File",
            "value-key": "[SUBJECT_DIR]"
        },
        {
            "description": "The name of the output for the outcomes of preprocessing and visual reports. When processing is ran via CBRAIN only subject-specific files/folders will be saved, so the naming of the output folder will not influence the final naming/destination of files/folders.",
            "id": "mriqc_output_dir",
            "name": "MRIQC Output Directory",
            "optional": false,
            "type": "String",
            "value-key": "[MRIQC_OUTPUT_DIR]"
        },
        {
            "command-line-flag": "--session-id",
            "id": "session_id",
            "name": "Session ID",
            "description": "filter input dataset by session id",
            "optional": true,
            "type": "String",
            "value-key": "[SESSION_ID]"
        },
        {
            "command-line-flag": "--run-id",
            "id": "run_id",
            "name": "Run ID",
            "description": "filter input dataset by run id (only integer run ids are valid)",
            "optional": true,
            "type": "Flag",
            "value-key": "[RUN_ID]"
        },
        {
            "command-line-flag": "--task-id",
            "id": "task_id",
            "name": "Task ID",
            "description": "filter input dataset by task id",
            "optional": true,
            "type": "String",
            "value-key": "[TASK_ID]"
        },
        {
            "command-line-flag": "--modalities",
            "id": "modalities",
            "name": "Modalities",
            "description": "filter input dataset by MRI type",
            "optional": true,
            "type": "String",
            "value-key": "[MODALITIES]"
        },
        {
            "command-line-flag": "--dry-run",
            "id": "dry_run",
            "name": "Dry Run",
            "description": "Do not run the workflow.",
            "optional": true,
            "type": "Flag",
            "value-key": "[DRY_RUN]"
        },
        {
            "command-line-flag": "--mem_gb",
            "id": "mem_gb",
            "name": "Memory (GB)",
            "description": "available total memory",
            "optional": true,
            "default-value": 7,
            "maximum": 8,
            "type": "Number",
            "value-key": "[MEM_GB]"
        },
        {
            "command-line-flag": "--float32",
            "id": "float32",
            "name": "Cast to Float32",
            "description": "Cast the input data to float32 if it is represented in higher precision (saves space and improves perfomance)",
            "optional": true,
            "type": "Flag",
            "value-key": "[FLOAT32]"
        },
        {
            "command-line-flag": "--ica",
            "id": "ica",
            "name": "Run ICA",
            "description": "Run ICA on the raw data and include the componentsin the individual reports (slow but potentially very insightful)",
            "optional": true,
            "type": "Flag",
            "value-key": "[ICA]"
        },
        {
            "command-line-flag": "--fd_thres",
            "id": "fd_thresh",
            "name": "Framewise Displacement Threshold",
            "description": "motion threshold for framewise displacement computation",
            "optional": true,
            "type": "Number",
            "value-key": "[FD_THRESH]"
        },
        {
            "default-value": "derivatives/",
            "id": "derivatives_prefix",
            "name": "derivatives_prefix",
            "description": "Folders to put before the pipeline specific folder. By default this will look like DataProvider/derivatives/PipelineName, where pipeline name is specific to the current pipeline. The provided string must end in /",
            "optional": true,
            "type": "String",
            "value-key": "[DERIVATIVES_PREFIX]"
        }
    ],
    "output-files" : [{
        "id" : "output_dir",
        "name" : "Output Directory",
        "description" : "This is the output containing the subject directory and html reports.",
        "path-template" : "[MRIQC_OUTPUT_DIR]/[SUBJECT_DIR]*",
        "optional" : false
    }],
    "groups": [
        {
            "id": "non_standard_params",
            "name": "Non-standard parameters",
            "members": [
                "fd_thresh",
                "ica",
                "float32",
                "mem_gb",
                "dry_run",
                "modalities",
                "task_id",
                "run_id"
            ]
        }
    ],
    "tags": {
        "application-type": [
            "bids"
        ],
        "domain": [
            "neuroinformatics",
            "mri",
            "fmri",
            "quality"
        ]
    },
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 16,
        "walltime-estimate": 44000
    },
    "custom": {
        "cbrain:readonly-input-files": true,
        "cbrain:author": "Erik Lee <leex6144@umn.edu>",
        "cbrain:allow_empty_strings": ["derivatives_prefix"],
        "cbrain:override-string-input-ruby-regex": {
            "derivatives_prefix": ":relative-path:"
        },
        "cbrain:no-run-id-for-outputs": [ "output_dir"],
        "cbrain:integrator_modules": {
            "BoutiquesFileTypeVerifier": {
                "subject_dir": [ "BidsSubject" ]
            },
            "BoutiquesFileNameMatcher": {
                "subject_dir": "^sub-[a-zA-Z0-9_]+$"
            },
            "BoutiquesOutputFileTypeSetter": {
                "output_dir": "MRIQCOutput"
            },
            "BoutiquesForcedOutputBrowsePath" : {
              "output_dir": "[DERIVATIVES_PREFIX]mriqc"
            },
            "BoutiquesTaskLogsCopier": {
                "stdout":     "[MRIQC_OUTPUT_DIR]/[SUBJECT_DIR]/ses-[SESSION_ID]/.cbrain/stdout.log",
                "stderr":     "[MRIQC_OUTPUT_DIR]/[SUBJECT_DIR]/ses-[SESSION_ID]/.cbrain/stderr.log",
                "runtime":    "[MRIQC_OUTPUT_DIR]/[SUBJECT_DIR]/ses-[SESSION_ID]/.cbrain/runtime_info.properties",
                "descriptor": "[MRIQC_OUTPUT_DIR]/[SUBJECT_DIR]/ses-[SESSION_ID]/.cbrain/boutiques_descriptor.json",
                "invoke":     "[MRIQC_OUTPUT_DIR]/[SUBJECT_DIR]/ses-[SESSION_ID]/.cbrain/boutiques_invoke.json",
                "jobscript":  "[MRIQC_OUTPUT_DIR]/[SUBJECT_DIR]/ses-[SESSION_ID]/.cbrain/job_script.sh",
                "cbrain_params": "[MRIQC_OUTPUT_DIR]/[SUBJECT_DIR]/ses-[SESSION_ID]/.cbrain/cbrain_params.json"
            },
            "BoutiquesBidsSubjectFileSelector": { "subject_dir": "all_to_keep" },
            "BoutiquesOutputCacheCleaner": ["output_dir"],
            "BoutiquesBidsSingleSubjectMaker": "subject_dir"
        }
    }
}
