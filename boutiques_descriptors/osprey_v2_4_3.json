{
    "name":                "OSPREY",
    "tool-version":        "2.4.3",
    "author":              "Georg Oeltzschner, Helge J. ZÃ¶llner, Richard A. E. Edden, Erik G. Lee",
    "description":         "Osprey is an all-in-one software suite for state-of-the art processing and quantitative analysis of in-vivo magnetic resonance spectroscopy (MRS) data.",
    "url":                 "https://osprey-bids.readthedocs.io/en/latest/",
    "command-line":        "true [DERIVATIVES_PREFIX]; true [SubjectDirectory] ; rm -f CbrainBidsSingleSubject/[SubjectDirectory] ; cp -p -R -L [SubjectDirectory] CbrainBidsSingleSubject/[SubjectDirectory] ; osprey CbrainBidsSingleSubject [OSPREYOutputDirectoryName] participant [JSONConfig] [ParticipantLabel] [SessionLabel] [CabinetOutput] [LocalizerRegistration] [LocSearchTerm] [PreferredAnatModality] [TermsNotAllowedInAnat] [RequireSUIDMatch]",
    "schema-version":      "0.5",
    "container-image":     {
      "type":  "singularity",
      "index": "docker://",
      "image": "dcanumn/osprey-bids:2.4.3"
    },
    "inputs":              [
      {
        "id":          "SubjectDirectory",
        "name":        "Subject Directory",
        "description": "The study-wide BIDS directory. In CBRAIN this is also referred to (and used) as the subject directory since a new BIDS dir will be made for the selected subject prior to processing.",
        "type":        "File",
        "optional":    false,
        "value-key":   "[SubjectDirectory]"
      },
      {
        "id":          "OSPREYOutputDirectoryName",
        "name":        "OSPREY Output Directory",
        "description": "The name of the output directory to store outcomes of preprocessing and reports. When processing is ran via CBRAIN only subject-specific files/folders will be saved, so the naming of the output folder will not influence the final naming/destination of files/folders.",
        "type":        "String",
        "optional":    false,
        "value-key":   "[OSPREYOutputDirectoryName]"
      },
      {
        "id":          "JSONConfig",
        "name":        "JSON Config File",
        "description": "The JSON file used to configure OSPREY processing.",
        "type":        "File",
        "optional":    false,
        "value-key":   "[JSONConfig]"
      },
      {
        "id":                "ParticipantLabel",
        "name":              "Participant Label",
        "description":       "Space delimited list of subjects to be processed (with or without sub- prefix)",
        "type":              "String",
        "optional":          true,
        "command-line-flag": "--participant-label",
        "value-key":         "[ParticipantLabel]"
      },
      {
        "id":                "SessionLabel",
        "name":              "Session Label",
        "description":       "select a specific session to be processed (with or without ses- prefix)",
        "type":              "String",
        "optional":          true,
        "command-line-flag": "--session-id",
        "value-key":         "[SessionLabel]"
      },
      {
        "id":                "CabinetOutput",
        "name":              "CABINET Output",
        "description":       "The output folder from a previously computed CABINET run. This will provide OSPREY with a segmentation map to do partial volume correction. The pipeline will look for CabinetOutput/precomputed/sub*/ses*/anat/*_space-orig_desc-aseg_dseg.nii.gz)",
        "type":              "File",
        "optional":          true,
        "command-line-flag": "--segmentation-dir",
        "value-key":         "[CabinetOutput]"
      },
      {
        "id":                "LocalizerRegistration",
        "name":              "Localizer Registration",
        "description":       "Align the anatomical reference to a localizer scan. If this flag is used, processing will be skipped for sessions without a scan in the anat dir with *localizer* in the name.",
        "type":              "Flag",
        "optional":          true,
        "command-line-flag": "--localizer_registration",
        "value-key":         "[LocalizerRegistration]"
      },
      {
        "id":                "LocSearchTerm",
        "name":              "LocSearchTerm",
        "description":       "Search Term for Localizer Scan ('i.e. *localizer*.nii)",
        "type":              "String",
        "optional":          true,
        "command-line-flag": "--localizer_search_term",
        "value-key":         "[LocSearchTerm]"
      },
      {
        "id":                "PreferredAnatModality",
        "name":              "PreferredAnatModality",
        "description":       "Which anatomical modality to register the localizer to if both are present. Either T1w or T2w, default T1w.",
        "type":              "String",
        "optional":          true,
        "command-line-flag": "--preferred_anat_modality",
        "value-key":         "[PreferredAnatModality]"
      },
      {
        "id":                "TermsNotAllowedInAnat",
        "name":              "TermsNotAllowedInAnat",
        "description":       "One or more terms, seperated by spaces, that have to be absent for a file to be considered an anatomical scan. Mainly useful for avoiding confusion between primary anat and localizer scans.",
        "type":              "String",
        "optional":          true,
        "list":              true,
        "command-line-flag": "--terms_not_allowed_in_anat",
        "value-key":         "[TermsNotAllowedInAnat]"
      },
      {
        "id":                "RequireSUIDMatch",
        "name":              "Require MRS/Localizer Study Instance UID Match",
        "description":       "If activated, OSPREY will only try to match MRS scans with localizers if the StudyInstanceUID field in the BIDS JSON matches across the localizer/mrs images.",
        "type":              "Flag",
        "optional":          true,
        "command-line-flag": "--require_same_mrs_localizer_suid",
        "value-key":         "[RequireSUIDMatch]"
      },
      {
        "id":          "CabinetOutputJson",
        "name":        "JSON of CABINET Output",
        "description": "The JSON file that come with the output folder from a previously computed CABINET run.",
        "type":        "File",
        "optional":    true
      },
      {
        "id":            "derivatives_prefix",
        "name":          "derivatives_prefix",
        "description":   "Folders to put before the pipeline specific folder. By default this will look like DataProvider/derivatives/PipelineName, where pipeline name is specific to the current pipeline. The provided string must end in /",
        "type":          "String",
        "optional":      true,
        "default-value": "derivatives/",
        "value-key":     "[DERIVATIVES_PREFIX]"
      }
    ],
    "groups":              [
      {
        "id":          "segmentation_dir",
        "name":        "Segmentation directory content",
        "description": "File(s) to put in the precomputed folder for --segmentation-dir option",
        "all-or-none": true,
        "members":     [
          "CabinetOutput",
          "CabinetOutputJson"
        ]
      }
    ],
    "output-files":        [
      {
        "id":            "OutputDirectory",
        "name":          "Output Directory",
        "description":   "The output directory to store outcomes of preprocessing and reports",
        "optional":      false,
        "path-template": "[OSPREYOutputDirectoryName]/[SubjectDirectory]"
      }
    ],
    "suggested-resources": {
      "cpu-cores": 1,
      "ram": 24,
      "walltime-estimate": 25000
    },
    "tags":                {
      "application-type": [
        "bids"
      ],
      "domain": [
        "neuroinformatics",
        "mrs",
        "spectroscopy"
      ]
    },
    "custom":              {
      "cbrain:readonly-input-files":  true,
      "cbrain:author":                "Erik Lee <leex6144@umn.edu>",
      "cbrain:allow_empty_strings":   [
        "derivatives_prefix"
      ],
      "cbrain:override-string-input-ruby-regex": {
        "derivatives_prefix": ":relative-path:"
      },
      "cbrain:no-run-id-for-outputs": [
        "OutputDirectory"
      ],
      "cbrain:integrator_modules":    {
        "BoutiquesFileTypeVerifier": {
          "SubjectDirectory": [
            "BidsSubject"
          ],
          "CabinetOutput": [
            "CabinetPrecomputedOutput",
            "BibsnetOutput"
          ]
        },
        "BoutiquesFileNameMatcher": {
          "SubjectDirectory": "^sub-[a-zA-Z0-9_]+$"
        },
        "BoutiquesOutputFileTypeSetter": {
          "OutputDirectory": "OSPREYOutput"
        },
        "BoutiquesForcedOutputBrowsePath": {
          "OutputDirectory": "[DERIVATIVES_PREFIX]osprey"
        },
        "BoutiquesTaskLogsCopier": {
          "stdout": "[OSPREYOutputDirectoryName]/[SubjectDirectory]/ses-[SessionLabel]/.cbrain/stdout.log",
          "stderr": "[OSPREYOutputDirectoryName]/[SubjectDirectory]/ses-[SessionLabel]/.cbrain/stderr.log",
          "runtime": "[OSPREYOutputDirectoryName]/[SubjectDirectory]/ses-[SessionLabel]/.cbrain/runtime_info.properties",
          "descriptor": "[OSPREYOutputDirectoryName]/[SubjectDirectory]/ses-[SessionLabel]/.cbrain/boutiques_descriptor.json",
          "invoke": "[OSPREYOutputDirectoryName]/[SubjectDirectory]/ses-[SessionLabel]/.cbrain/boutiques_invoke.json",
          "jobscript": "[OSPREYOutputDirectoryName]/[SubjectDirectory]/ses-[SessionLabel]/.cbrain/job_script.sh",
          "cbrain_params": "[OSPREYOutputDirectoryName]/[SubjectDirectory]/ses-[SessionLabel]/.cbrain/cbrain_params.json"
        },
        "BoutiquesBidsSubjectFileSelector": {
          "SubjectDirectory": "all_to_keep"
        },
        "BoutiquesBidsSingleSubjectMaker": "SubjectDirectory",
        "BoutiquesInputSubdirMaker": {
          "CabinetOutput": {
            "dirname": "precomputed",
            "append_filename": false
          },
          "CabinetOutputJson": {
            "dirname": "precomputed",
            "filename": "dataset_description.json",
            "append_filename": false
          }
        }
      }
    }
  }
