{
    "name": "qsiprep",
    "description": "q-Space Image PREProcessing workflows",
    "author": "University of Pennsylvania Lifespan Informatics and Neuroimaging Center (https://github.com/PennLINC)",
    "tool-version": "v0.20.0",
    "shell": "/bin/bash",
    "schema-version": "0.5",
    "command-line": "true [DERIVATIVES_PREFIX]; qsiprep [SUBJECT_DIR] [QSIPREP_OUTPUT_DIR] participant --skip_bids_validation --work-dir \"$PWD\"/work [FS_LICENSE_FILE] --nthreads 4 --omp-nthreads 3 --mem_mb 25000 [INTERACTIVE_REPORTS_ONLY] [ANAT_MODALITY] [RECON_ONLY] [RECON_SPEC] [RECON_INPUT] [PEPOLAR_METHOD] [USE_PLUGIN] [ANAT_ONLY] [DWI_ONLY] [B1_BIAS_CORRECT] [INFANT] [BOILERPLATE] [VERBOSE] [IGNORE] [LONGITUDINAL] [B0_THRESHOLD] [DWI_DENOISE_WINDOW] [UNRINGING_METHOD] [NO_B0_HARMONIZATION] [DENOISE_AFTER_COMBINING] [DENOISE_METHOD] [COMBINE_ALL_DWIS] [SEPARATE_ALL_DWIS] [DISTORTION_GROUP_MERGE] [WRITE_LOCAL_BVECS] [OUTPUT_SPACE] [TEMPLATE] [OUTPUT_RESOLUTION] [B0_TO_T1W_TRANSFORM] [INTRAMODAL_TEMPLATE_ITERS] [INTRAMODAL_TEMPLATE_TRANSFORM] [B0_MOTION_CORR_TO] [HMC_TRANSFORM] [HMC_MODEL] [EDDY_CONFIG] [SHORELINE_ITERS] [IMPUTE_SLICE_THRESHOLD] [SKULL_STRIP_TEMPLATE] [SKULL_STRIP_FIXED_SEED] [DO_RECONALL] [PREFER_DEDICATED_FMAPS] [FMAP_BSPLINE] [FMAP_NO_DEMEAN] [USE_SYN_SDC] [FORCE_SYN] [REPORTS_ONLY] [WRITE_GRAPH] [SLOPPY] [FREESURFER_INPUT]",
    "container-image":
    {
        "image": "pennbbl/qsiprep:0.20.0",
        "index": "docker://",
        "type":  "singularity"
    },
    "groups": [
    {
        "description": "Options for interactive report outputs",
        "id": "interactive_report_arguments_group",
        "members": [
            "interactive_reports_only"
         ],
        "name": "Interactive Report Only Arguments"
    },
    {
        "description": "Options for reconstructing qsiprep outputs",
        "id": "reconstruction_arguments_group",
        "members": [
            "recon_only",
            "recon_spec",
            "recon_input"
         ],
        "name": "Reconstruction Arguments"
    },
    {
        "description": "Options to handle performance",
        "id": "performance_arguments_group",
        "members": [
            "use_plugin",
            "anat_only",
            "dwi_only",
            "infant",
            "boilerplate",
            "verbose"
         ],
        "name": "Performance Arguments"
    },
    {
        "description": "Workflow Configuration",
        "id": "workflow_configuration_arguments_group",
        "members": [
            "ignore",
            "longitudinal",
            "b0_threshold",
            "dwi_denoise_window",
            "unringing_method",
            "no_b0_harmonization",
            "combine_all_dwis",
            "separate_all_dwis",
            "distortion_group_merge",
            "write_local_bvecs",
            "output_space",
            "template",
            "denoise_after_combining"
         ],
        "name": "Workflow Configuration Arguments"
    },
    {
        "description": "Options for dwi-to-T1w Coregistration",
        "id": "dwi_to_T1w_coregistration_arguments_group",
        "members": [
            "b0_to_t1w_transform",
            "intramodal_template_iters",
            "intramodal_template_transform",
            "bo_motion_corr_to",
            "hmc_transform",
            "hmc_model",
            "eddy_config",
            "shoreline_iters",
            "impute_slice_threshold"
         ],
        "name": "dwi-to-T1w Coregistration Arguments"
    },
    {
        "description": "Specific options for ANTs registrations",
        "id": "ANTs_registrations_arguments_group",
        "members": [
            "skull_strip_template",
            "skull_strip_fixed_seed"
         ],
        "name": "ANTs Registrations Arguments"
    },
    {
        "description": "Specific options for FreeSurfer preprocessing",
        "id": "FreeSurfer_preprocessing_arguments_group",
        "members": [
            "do_reconall"
         ],
        "name": "FreeSurfer Preprocessing Arguments"
    },
    {
        "description": "Specific options for handling fieldmaps",
        "id": "fieldmap_arguments_group",
        "members": [
            "prefer_dedicated_fmaps",
            "fmap_bspline",
            "fmap_no_demean"
         ],
        "name": "Fieldmaps Arguments"
    },
    {
        "description": "Specific options for SyN distortion correction",
        "id": "SyN_distortion_correction_arguments_group",
        "members": [
            "use_syn_sdc",
            "force_syn"
         ],
        "name": "SyN Distortion Correction Arguments"
    },
    {
        "description": "Other options",
        "id": "other_options_arguments_group",
        "members": [
            "reports_only",
            "write_graph",
            "sloppy"
         ],
        "name": "Other Options Arguments"
    }
    ],
    "inputs": [
        {
            "description": "Subject folder for BIDS (folders name should be sub-XXXXX).",
            "id": "subject_dir",
            "name": "subject_dir",
            "optional": false,
            "type": "File",
            "value-key": "[SUBJECT_DIR]"
        },
        {
            "description": "The name of the output for the outcomes of preprocessing and visual reports",
            "id": "output_dir_name",
            "name": "output_dir_name",
            "optional": false,
            "type": "String",
            "value-key": "[QSIPREP_OUTPUT_DIR]"
        },
        {
            "command-line-flag": "--interactive-reports-only",
            "description": "Create interactive report json files on already preprocessed data.",
            "id": "interactive_reports_only",
            "name": "interactive reports only",
            "optional": true,
            "type": "Flag",
            "value-key": "[INTERACTIVE_REPORTS_ONLY]"
        },
        {
            "command-line-flag": "--recon-only",
            "description": "Run only reconstruction, assumes preprocessing has already completed. ",
            "id": "recon_only",
            "name": "qsiprep recon only",
            "optional": true,
            "type": "Flag",
            "value-key": "[RECON_ONLY]"
        },
        {
            "command-line-flag": "--recon-spec",
            "description": "json file specifying a reconstruction pipeline to be run after preprocessing",
            "id": "recon_spec",
            "name": "qsiprep recon spec",
            "optional": true,
            "type": "File",
            "value-key": "[RECON_SPEC]"
        },
        {
            "command-line-flag": "--recon-input",
            "description": "Use this directory as inputs to qsirecon. This option skips qsiprep.",
            "id": "recon_input",
            "name": "qsiprep recon input",
            "optional": true,
            "type": "File",
            "value-key": "[RECON_INPUT]"
        },
        {
            "command-line-flag": "--use-plugin",
            "description": "Nipype plugin configuration file",
            "id": "use_plugin",
            "name": "qsiprep use plugin",
            "optional": true,
            "type": "File",
            "value-key": "[USE_PLUGIN]"
        },
        {
            "command-line-flag": "--anat-only",
            "description": "Run anatomical workflows only",
            "id": "anat_only",
            "name": "qsiprep anatomical workflows only",
            "optional": true,
            "type": "Flag",
            "value-key": "[ANAT_ONLY]"
        },
        {
            "command-line-flag": "--dwi-only",
            "description": "Ignore anatomical (T1w/T2w) data and process DWIs only",
            "id": "dwi_only",
            "name": "qsiprep dwi only",
            "optional": true,
            "type": "Flag",
            "value-key": "[DWI_ONLY]"
        },
        {
            "command-line-flag": "--infant",
            "description": "Configure pipelines to process infant brains",
            "id": "infant",
            "name": "qsiprep infant",
            "optional": true,
            "type": "Flag",
            "value-key": "[INFANT]"
        },
        {
            "command-line-flag": "--boilerplate",
            "description": "Generate boilerplate only",
            "id": "boilerplate",
            "name": "qsiprep boilerplate",
            "optional": true,
            "type": "Flag",
            "value-key": "[BOILERPLATE]"
        },
        {
            "command-line-flag": "-v",
            "id": "verbose",
            "name": "verbose",
            "description": "Increases log verbosity for each occurence (-vvv).",
            "optional": true,
            "type": "Flag",
            "value-key": "[VERBOSE]"
        },
        {
            "command-line-flag": "--ignore",
            "description": "Ignore selected aspects of the input dataset to disable corresponding parts of the workflow (a space delimited list)",
            "id": "ignore",
            "name": "qsiprep ignore",
            "optional": true,
            "type": "String",
            "value-choices": [
                "fieldmaps",
                "sbref"
            ],
            "value-key": "[IGNORE]"
        },
        {
            "command-line-flag": "--longitudinal",
            "description": "Treat dataset as longitudinal - may increase runtime",
            "id": "longitudinal",
            "name": "qsiprep longitudinal",
            "optional": true,
            "type": "Flag",
            "value-key": "[LONGITUDINAL]"
        },
        {
            "command-line-flag": "--b0-threshold",
            "description": "Any value in the .bval file less than this will be considered a b=0 image. Current default threshold = 100; this threshold can be lowered or increased. Note, setting this too high can result in inaccurate results.",
            "id": "b0_threshold",
            "name": "qsiprep b0 threshold",
            "optional": true,
            "type": "Number",
            "value-key": "[B0_THRESHOLD]"
        },
        {
            "command-line-flag": "--dwi-denoise-window",
            "description": "Window size in voxels for ``dwidenoise``. Must be odd (default: 5). If 0, ``dwidwenoise`` will not be run (default: 5)",
            "id": "dwi_denoise_window",
            "name": "qsiprep dwi denoise window",
            "optional": true,
            "type": "Number",
            "value-key": "[DWI_DENOISE_WINDOW]"
        },
        {
            "command-line-flag": "--unringing-method",
            "description": "Method for Gibbs-ringing removal. - none: no action - mrdegibbs: use mrdegibbs from mrtrix3. rpg: Gibbs from TORTOISE, suggested for partial Fourier acquisitions (default: none).",
            "id": "unringing_method",
            "name": "qsiprep dwi unringing method",
            "optional": true,
            "type": "String",
            "value-choices": [
                "none",
                "mrdegibbs",
                "rpg"
            ],
            "value-key": "[UNRINGING_METHOD]"
        },
        {
            "command-line-flag": "--no-b0-harmonization",
            "description": "skip re-scaling dwi scans to have matching b=0 intensities",
            "id": "no_b0_harmonization",
            "name": "qsiprep no b0 harmonization",
            "optional": true,
            "type": "Flag",
            "value-key": "[NO_B0_HARMONIZATION]"
        },
        {
            "command-line-flag": "--denoise-after-combining",
            "description": "Run 'dwidenoise' after combining dwis. Requires ''--combine-all-dwis'. This option could have adverse side-effects in cases where there is motion that occurs between scans.",
            "id": "denoise_after_combining",
            "name": "qsiprep denoise after combining",
            "optional": true,
            "type": "Flag",
            "value-key": "[DENOISE_AFTER_COMBINING]"
        },
        {
            "command-line-flag": "--combine-all-dwis",
            "description": "[DEPRECATED] Combine dwis from across multiple runs for motion correction and reconstruction.",
            "id": "combine_all_dwis",
            "name": "qsiprep combine all dwis",
            "optional": true,
            "type": "Flag",
            "value-key": "[COMBINE_ALL_DWIS]"
        },
        {
            "command-line-flag": "--separate_all_dwis",
            "description": "Don't attempt to combine dwis from multiple runs. Each will be processed separately.",
            "id": "separate_all_dwis",
            "name": "qsiprep separate all dwis",
            "optional": true,
            "type": "Flag",
            "value-key": "[SEPARATE_ALL_DWIS]"
        },
        {
            "command-line-flag": "--distortion-group-merge",
            "description": "How to combine images across distorted groups. - concatenate: append images in the 4th dimension - average: if a whole sequence was duplicated in both PE directions, average the corrected images of the same q-space coordinate - none: Default. Keep distorted groups separate",
            "id": "distortion_group_merge",
            "name": "qsiprep distortion group merge",
            "optional": true,
            "type": "String",
            "value-choices": [
                "concat",
                "average",
                "none"
            ],
            "value-key": "[DISTORTION_GROUP_MERGE]"
        },
        {
            "command-line-flag": "--write-local-bvecs",
            "description": "Write a series of voxelwise bvecs, relevant if writing preprocessed dwis to template space",
            "id": "write_local_bvecs",
            "name": "qsiprep write local bvecs",
            "optional": true,
            "type": "Flag",
            "value-key": "[WRITE_LOCAL_BVECS]"
        },
        {
            "command-line-flag": "--denoise-method",
            "description": "Image-based denoising method. Either “dwidenoise” (MRtrix), “patch2self” (DIPY) or none. (default: dwidenoise)",
            "id": "DENOISE_METHOD",
            "name": "Denoising Method",
            "optional": true,
            "type": "String",
            "value-choices": [
                "dwidenoise",
                "patch2self",
                "none"
            ],
            "value-key": "[DENOISE_METHOD]"
        },
        {
            "command-line-flag": "--pepolar-method",
            "description": "Possible choices: TOPUP, DRBUDDI, TOPUP+DRBUDDI. Select which SDC method to use for PEPOLAR fieldmaps (default: TOPUP)",
            "id": "PEPOLAR_METHOD",
            "name": "Pepolar Method",
            "optional": true,
            "type": "String",
            "value-choices": [
                "TOPUP",
                "DRBUDDI",
                "TOPUP+DRBUDDI"
            ],
            "value-key": "[PEPOLAR_METHOD]"
        },
        {
            "command-line-flag": "--output-space",
            "description": "Volume and surface spaces to resample dwis into - T1w: subject anatomical volume - template: deprecated. Will be ignored",
            "id": "output_space",
            "name": "qsiprep output space",
            "optional": true,
            "type": "String",
            "value-choices": [
                "T1w",
                "template"
            ],
            "value-key": "[OUTPUT_SPACE]"
        },
        {
            "command-line-flag": "--b1-biascorrect-stage",
            "description": "Which stage to apply B1 bias correction. The default ‘final’ will apply it after all the data has been resampled to its final space. ‘none’ will skip B1 bias correction and ‘legacy’ will behave consistent with qsiprep < 0.17.",
            "id": "B1_BIAS_CORRECT",
            "name": "B1 Bias Correction Stage",
            "optional": true,
            "type": "String",
            "value-choices": [
                "final",
                "legacy",
                "none"
            ],
            "value-key": "[B1_BIAS_CORRECT]"
        },
        {
            "command-line-flag": "--anatomical-template",
            "description": "Volume template space",
            "id": "template",
            "name": "qsiprep template",
            "optional": true,
            "type": "String",
            "value-choices": [
                "MNI152NLin2009cAsym"
            ],
            "value-key": "[TEMPLATE]"
        },
        {
            "command-line-flag": "--anat-modality",
            "description": "Possible choices: T1w, T2w, none. Modality to use as the anatomical reference. Images of this contrast will be skull stripped and segmented for use in the visual reports and reconstruction. If –infant, T2w is forced.",
            "id": "AnatModality",
            "name": "Anatomical Modality",
            "optional": true,
            "type": "String",
            "value-choices": [
                "T1w",
                "T2w",
                "none"
            ],
            "value-key": "[ANAT_MODALITY]"
        },
        {
            "command-line-flag": "--output-resolution",
            "description": "The isotropic voxel size in mm the data will be resampled to after preprocessing. If set to a lower value than the original voxel size, your data will be upsampled using BSpline interpolation.",
            "id": "output_resolution",
            "name": "qsiprep output resolution",
            "optional": false,
            "type": "Number",
            "default-value": 2,
            "value-key": "[OUTPUT_RESOLUTION]"
        },
        {
            "command-line-flag": "--b0-to-t1w-transform",
            "description": "Degrees of freedom when registering b0 to T1w images. 6 degrees (rotation and translation) are used by default.",
            "id": "b0_to_t1w_transform",
            "name": "qsiprep b0 to t1w transform",
            "optional": true,
            "type": "String",
            "value-choices": [
                "Rigid",
                "Affine"
            ],
            "value-key": "[B0_TO_T1W_TRANSFORM]"
        },
        {
            "command-line-flag": "--intramodal-template-iters",
            "description": "Number of iterations for finding the midpoint image from the b0 templates from all groups. Has no effect if there is only one group. If 0, all b0 templates are directly registered to the t1w image.",
            "id": "intramodal_template_iters",
            "name": "qsiprep intramodal template iters",
            "optional": true,
            "type": "Number",
            "value-key": "[INTRAMODAL_TEMPLATE_ITERS]"
        },
        {
            "command-line-flag": "--intramodal-template-transform",
            "description": "Transformation used for building the intramodal template.",
            "id": "intramodal_template_transform",
            "name": "qsiprep intramodal template transform",
            "optional": true,
            "type": "String",
            "value-choices": [
                "Rigid",
                "Affine",
                "BSplineSyN",
                "SyN"
            ],
            "value-key": "[INTRAMODAL_TEMPLATE_TRANSFORM]"
        },
        {
            "command-line-flag": "--b0-motion-corr-to",
            "description": "Align to the 'first' b0 volume or do an 'iterative' registration of all b0 images to their midpoint image",
            "id": "bo_motion_corr_to",
            "name": "qsiprep b0 motion correction to",
            "optional": true,
            "type": "String",
            "value-choices": [
                "iterative",
                "first"
            ],
            "value-key": "[B0_MOTION_CORR_TO]"
        },
        {
            "command-line-flag": "--hmc-transform",
            "description": "Transformation to be optimized during head motion correction",
            "id": "hmc_transform",
            "name": "qsiprep head motion correction transform",
            "optional": true,
            "type": "String",
            "value-choices": [
                "Affine",
                "Rigid"
            ],
            "value-key": "[HMC_TRANSFORM]"
        },
        {
            "command-line-flag": "--hmc-model",
            "description": "Model used to generate target images for hmc. If 'none' the non-b0 images will be warped using the same transform as their nearest b0 image. If '3dSHORE', SHORELine will be used. If 'eddy_ingress', the dwis are assumed to have been run through fsls eddy.",
            "id": "hmc_model",
            "name": "qsiprep head motion correction model",
            "optional": true,
            "type": "String",
            "value-choices":[
                "none",
                "3dSHORE",
                "eddy"
            ],
            "value-key": "[HMC_MODEL]"
        },
        {
            "command-line-flag": "--eddy-config",
            "description": "Path to a json file with settings for the call to eddy. If no json is specified, a default one will be used. The current default json can be found here: https://github.com/PennBBL/qsiprep/blob/master/qsiprep/data/eddy_params.json",
            "id": "eddy_config",
            "name": "qsiprep eddy configuration",
            "optional": true,
            "type": "File",
            "value-key": "[EDDY_CONFIG]"
        },
        {
            "command-line-flag": "--shoreline-iters",
            "description": "Number of SHORELine iterations.",
            "id": "shoreline_iters",
            "name": "qsiprep SHORELine iterations",
            "optional": true,
            "type": "Number",
            "value-key": "[SHORELINE_ITERS]"
        },
        {
            "command-line-flag": "--impute-slice-threshold",
            "description": "Impute data in slices that are this many SDs from expected. If 0 (default), no slices will be imputed",
            "id": "impute_slice_threshold",
            "name": "qsiprep impute slice threshold",
            "optional": true,
            "type": "Number",
            "value-key": "[IMPUTE_SLICE_THRESHOLD]"
        },
        {
            "command-line-flag": "--skull-strip-template",
            "description": "Select ANTs skull-stripping template",
            "id": "skull_strip_template",
            "name": "qsiprep skull strip template",
            "optional": true,
            "type": "String",
            "value-choices":[
                "OASIS",
                "NKI"
            ],
            "value-key": "[SKULL_STRIP_TEMPLATE]"
        },
        {
            "command-line-flag": "--skull-strip-fixed-seed",
            "description": "Do not use a random seed for skull-stripping - will ensure run-to-run replicability when used with --omp-nthreads 1",
            "id": "skull_strip_fixed_seed",
            "name": "qsiprep skull strip fixed seed",
            "optional": true,
            "type": "Flag",
            "value-key": "[SKULL_STRIP_FIXED_SEED]"
        },
        {
            "command-line-flag": "--fs-license-file",
            "id": "fs_license_file",
            "name": "fs_license_file",
            "description": "Path to FreeSurfer license key file.\nGet it (for free) by registering at https://surfer.nmr.mgh.harvard.edu/registration.html",
            "optional": false,
            "type": "File",
            "value-key": "[FS_LICENSE_FILE]"
        },
        {
            "command-line-flag": "--freesurfer-input",
            "id": "freesurfer_input",
            "name": "freesurfer_input",
            "description": "Directory containing freesurfer outputs to be integrated into recon. AT THE MOMENT THIS WILL NOT WORK FOR S3 DATA PROVIDERS.",
            "optional": true,
            "type": "File",
            "value-key": "[FREESURFER_INPUT]"
        },
        {
            "command-line-flag": "--do-reconall",
            "description": "Run the FreeSurffer recon-all pipeline",
            "id": "do_reconall",
            "name": "qsiprep do reconall",
            "optional": true,
            "type": "Flag",
            "value-key": "[DO_RECONALL]"
        },
        {
            "command-line-flag": "--prefer-dedicated-fmaps",
            "description": "Forces unwarping to use files from the fmap directory instead of using an RPEdir scan from the same session.",
            "id": "prefer_dedicated_fmaps",
            "name": "qsiprep prefer dedicated fmaps",
            "optional": true,
            "type": "Flag",
            "value-key": "[PREFER_DEDICATED_FMAPS]"
        },
        {
            "command-line-flag": "--fmap-bspline",
            "description": "Fit a B-Spline field using least-squares (experimental)",
            "id": "fmap_bspline",
            "name": "qsiprep fmap bspline",
            "optional": true,
            "type": "Flag",
            "value-key": "[FMAP_BSPLINE]"
        },
        {
            "command-line-flag": "--fmap-no-demean",
            "description": "Do not remove median (within mask) from fieldmap",
            "id": "fmap_no_demean",
            "name": "qsiprep fmap no demean",
            "optional": true,
            "type": "Flag",
            "value-key": "[FMAP_NO_DEMEAN]"
        },
        {
            "command-line-flag": "--use-syn-sdc",
            "description": "EXPERIMENTAL: Use fieldmap-free distortion correction. To use this option, 'template' must be passed to --output-space",
            "id": "use_syn_sdc",
            "name": "qsiprep use syn sdc",
            "optional": true,
            "type": "Flag",
            "value-key": "[USE_SYN_SDC]"
        },
        {
            "command-line-flag": "--force-syn",
            "description": "EXPERIMENTAL: Use fieldmap-free distortion correction. To use this option, 'template' must be passed to --output-space",
            "id": "force_syn",
            "name": "qsiprep force syn",
            "optional": true,
            "type": "Flag",
            "value-key": "[FORCE_SYN]"
        },
        {
            "command-line-flag": "--reports-only",
            "description": "Only generate reports, don't run workflows. This will only rerun report aggregation, not reportlet generation for specific nodes.",
            "id": "reports_only",
            "name": "qsiprep reports only",
            "optional": true,
            "type": "Flag",
            "value-key": "[REPORTS_ONLY]"
        },
        {
            "command-line-flag": "--write-graph",
            "description": "Write workflow graph.",
            "id": "write_graph",
            "name": "qsiprep write graph",
            "optional": true,
            "type": "Flag",
            "value-key": "[WRITE_GRAPH]"
        },
        {
            "command-line-flag": "--sloppy",
            "description": "Use low-quality tools for speed - TESTING ONLY",
            "id": "sloppy",
            "name": "qsiprep sloppy",
            "optional": true,
            "type": "Flag",
            "value-key": "[SLOPPY]"
        },
        {
            "default-value": "derivatives/",
            "id": "derivatives_prefix",
            "name": "derivatives_prefix",
            "description": "Folders to put before the pipeline specific folder. By default this will look like DataProvider/derivatives/PipelineName, where pipeline name is specific to the current pipeline. The provided string must end in /",
            "optional": true,
            "type": "String",
            "value-key": "[DERIVATIVES_PREFIX]"
        }
    ],
    "output-files" : [{
            "id" : "output_dir",
            "name" : "Output Directory",
            "description" : "This is the directory where the QSIPREP Preproc outputs are to be stored.",
            "path-template" : "[QSIPREP_OUTPUT_DIR]/qsiprep/[SUBJECT_DIR]",
            "optional" : false
        },
        {
            "id" : "qsiprep_html_report",
            "name" : "qsiprep html report",
            "description" : "This is the html report generated by qsiprep.",
            "path-template" : "[QSIPREP_OUTPUT_DIR]/qsiprep/[SUBJECT_DIR].html",
            "optional" : false
        },
        {
            "id" : "recon_dir",
            "name" : "QSIPREP Recon Directory",
            "description" : "This is the directory where the QSIPREP RECON outputs are to be stored.",
            "path-template" : "[QSIPREP_OUTPUT_DIR]/qsirecon/[SUBJECT_DIR]",
            "optional" : true
            },
        {
            "id" : "qsirecon_html_report",
            "name" : "qsirecon html report",
            "description" : "This is the html report generated by qsirecon.",
            "path-template" : "[QSIPREP_OUTPUT_DIR]/qsirecon/[SUBJECT_DIR].html",
            "optional" : true
            }
    ],
    "custom": {
        "cbrain:readonly-input-files": true,
        "cbrain:author": "Erik Lee <leex6144@umn.edu>, Timothy Hendrickson <hendr522@umn.edu> and Natacha Beck <nbeck@mcin.ca>",
        "cbrain:allow_empty_strings": ["derivatives_prefix"],
        "cbrain:override-string-input-ruby-regex": {
            "derivatives_prefix": ":relative-path:"
        },
        "cbrain:no-run-id-for-outputs": [ "output_dir", "qsiprep_html_report" ],
        "cbrain:integrator_modules": {
            "BoutiquesFileTypeVerifier": {
                "subject_dir": [ "BidsSubject" ],
                "fs_license_file": [ "FreesurferLicense", "TextFile", "SingleFile" ]
            },
            "BoutiquesFileNameMatcher": {
                "subject_dir": "^sub-[a-zA-Z0-9_]+$"
            },
            "BoutiquesFreesurferLicenseFinder": "fs_license_file",
            "BoutiquesOutputFileTypeSetter": {
                "output_dir": "QsiprepOutput"
            },
            "BoutiquesForcedOutputBrowsePath" : {
              "output_dir": "[DERIVATIVES_PREFIX]qsiprep",
              "qsiprep_html_report": "[DERIVATIVES_PREFIX]qsiprep"
            },
            "BoutiquesBidsSubjectFileSelector": { "subject_dir": "all_to_keep" },
            "BoutiquesBidsSingleSubjectMaker": "subject_dir",
            "BoutiquesTaskLogsCopier": {
                "stdout":     "[QSIPREP_OUTPUT_DIR]/qsiprep/[SUBJECT_DIR]/.cbrain/stdout.log",
                "stderr":     "[QSIPREP_OUTPUT_DIR]/qsiprep/[SUBJECT_DIR]/.cbrain/stderr.log",
                "runtime":    "[QSIPREP_OUTPUT_DIR]/qsiprep/[SUBJECT_DIR]/.cbrain/runtime_info.properties",
                "descriptor": "[QSIPREP_OUTPUT_DIR]/qsiprep/[SUBJECT_DIR]/.cbrain/boutiques_descriptor.json",
                "invoke":     "[QSIPREP_OUTPUT_DIR]/qsiprep/[SUBJECT_DIR]/.cbrain/boutiques_invoke.json",
                "jobscript":  "[QSIPREP_OUTPUT_DIR]/qsiprep/[SUBJECT_DIR]/.cbrain/job_script.sh",
                "cbrain_params": "[QSIPREP_OUTPUT_DIR]/qsiprep/[SUBJECT_DIR]/.cbrain/cbrain_params.json"
            },
            "BoutiquesInputSubdirMaker": {
              "freesurfer_input": {"dirname": "freesurfer",
                                   "append_filename": false}
            }
        }
    }
}
